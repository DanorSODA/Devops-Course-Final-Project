# Workflow name as displayed in GitHub Actions UI
name: Quality Checks and Docker Build

# Define when this workflow will run
on:
  pull_request:
    branches:
      - main
  repository_dispatch:
    types: [submodule_update]
  workflow_dispatch:
  workflow_run:
    workflows: ["Update Submodule"]
    types:
      - completed
    branches:
      - main

# Define the sequence of jobs to run
jobs:
  # First job: Run quality checks
  quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: next-face-detection-app

    steps:
      # Checkout repository with submodules
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "yarn" # Enable Yarn dependency caching
          cache-dependency-path: next-face-detection-app/yarn.lock

      # Install project dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile # Install exact versions from yarn.lock

      # Run TypeScript type checking
      - name: Type check
        run: yarn type-check
        continue-on-error: false # Fail workflow if types are invalid

      # Run ESLint checks
      - name: Lint
        run: |
          yarn lint > lint-results.txt || {
            if grep -q "Error:" lint-results.txt; then
              echo "❌ Linting errors found"
              exit 1
            else
              echo "⚠️ Linting warnings found, but continuing..."
              exit 0
            fi
          }

      # Check code formatting with Prettier
      - name: Format check
        run: yarn format --check
        continue-on-error: false # Fail workflow if formatting is incorrect

  # Second job: Build and push Docker image
  docker:
    needs: quality # Wait for quality job to complete
    if: github.event_name != 'pull_request' # Don't run on PRs
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: next-face-detection-app

    steps:
      # Checkout repository with submodules
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      # Setup Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: danors # Docker Hub username
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Hub access token from GitHub secrets

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./next-face-detection-app # Build context directory
          push: true # Push the image to Docker Hub
          tags: | # Image tags
            danors/next-face-detection:latest
            danors/next-face-detection:${{ github.sha }}
          cache-from: type=registry,ref=danors/next-face-detection:buildcache # Use registry cache
          cache-to: type=registry,ref=danors/next-face-detection:buildcache,mode=max # Update registry cache
